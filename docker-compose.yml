version: '3.8'

x-env: &x-env
  env_file:
  - .env

services:

  notif-api:
    build: ./notify_api
    ports:
      - "8000:8000"
    volumes:
      - ./notify_api:/app
    depends_on:
      - rabbit
    <<: *x-env

  notif-admin:
    build: ./admin
    ports:
      - "8001:8001"
    volumes:
      - ./admin:/app/
      - static_volume:/usr/app/config/static:ro
    depends_on:
      - notify-db
    <<: *x-env

  notify-db:
    image: postgres:13.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    restart: on-failure
    <<: *x-env

  worker:
    build: ./senders
    command: celery -A senders.main worker --loglevel=info
    volumes:
      - ./senders:/app/senders/
    depends_on:
      - notify-db
      - rabbit
    environment:
      - CELERY_BROKER_URL=$CELERY_BROKER_URL
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - AUTH_SERVICE=$AUTH_SERVICE
      - UGA_SERVICE=$UGA_SERVICE

  scheduler:
    build: ./senders
    command: celery -A senders.main beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./admin:/app/
      - ./senders:/app/senders/
    depends_on:
      - rabbit
    <<: *x-env

  rabbit:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    logging:
      driver: none
    <<: *x-env

volumes:
  postgresdata:
  static_volume:
